{"version":3,"sources":["api/apiUtils.js","graphql/client.js","graphql/people.js","redux/actions/peopleActions.js","redux/actions/apiStatusActions.js","api/peopleApi.js","components/common/Spinner.js","components/common/Modal/Modal.css.js","components/common/Modal/index.js","components/common/card/Card.js","components/common/Title/Title.js","components/common/card/CardList.js","components/common/Pagination/PaginationBar.js","components/people/peoplePage.js","components/PageNotFound.js","App.js","reportWebVitals.js","index.js","redux/reducers/peopleReducer.js","redux/reducers/initialState.js","redux/reducers/apiStatusReducer.js","redux/reducers/index.js","redux/configureStore.dev.js","redux/actions/actionTypes.js","redux/configureStore.js"],"names":["handleResponse","response","a","data","People","Error","handleError","error","console","ApolloClient","cache","InMemoryCache","uri","GET_PEOPLE","gql","loadPeople","page","dispatch","type","types","pages","toString","graphQLClient","query","PeopleRequests","variables","pageNumber","then","catch","peopleApi","people","loadPeopleSucess","apiCallError","Spinner","className","Modal","styled","div","props","modalSize","modalRoot","document","getElementById","state","fadeType","background","React","createRef","transitionEnd","e","propertyName","onClose","onEscKeyDown","key","setState","handleClick","preventDefault","window","addEventListener","this","setTimeout","prevProps","prevState","isOpen","removeEventListener","ReactDom","createPortal","id","modalClass","role","onTransitionEnd","onClick","children","onMouseDown","ref","Component","defaultProps","Wrapper","Title","h1","Card","p","person","useState","modalOpen","setModalOpen","toggleState","name","height","mass","gender","href","homeworld","main","CardList","actions","src","alt","width","undefined","length","map","PaginationBar","clicked","count","updatePage","clickedNumber","Number","log","i","Math","round","push","Pagination","Item","active","connect","loading","apiCallsInProgress","bindActionCreators","peolpeActions","useEffect","target","textContent","activeLabel","PageNotFound","App","exact","path","component","PeoplePage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","ReactDOM","render","client","initialState","peopleReducer","action","actionTypeEndsInSuccess","substring","apiCallStatusReducer","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","reduxImmutablrStateInvariant","LOAD_PEOPLE_SUCCESS","BEGIN_API_CALL","API_CALL_ERROR","module","exports","require"],"mappings":"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","file":"static/js/main.0747b8ec.chunk.js","sourcesContent":["export const handleResponse = async(response) => {\r\n    if(response.data) return response.data.People;\r\n    throw new Error(\"Network response was not ok.\");\r\n}\r\n\r\nexport const handleError = (error) => {\r\n    console.error(\"API call failed. \" + error);\r\n    throw error;\r\n}\r\n","import { ApolloClient, InMemoryCache } from \"@apollo/client\";\r\n\r\nexport default new ApolloClient({\r\n    cache: new InMemoryCache(),\r\n    uri: \"https://sovtechstarwars.herokuapp.com\"\r\n})\r\n\r\n","import  gql  from \"graphql-tag\";\r\n\r\nexport const GET_PEOPLE = gql`\r\n    query People($pageNumber: String){\r\n    People(page: $pageNumber){\r\n      name\r\n      height\r\n      mass\r\n      gender\r\n      homeworld\r\n  \r\n      \r\n    }\r\n}\r\n`;\r\n","import * as types from './actionTypes';\r\nimport * as peopleApi from '../../api/peopleApi';\r\nimport { beginApiCall, apiCallError } from './apiStatusActions';\r\n\r\nexport const loadPeopleSucess = (people) => {\r\n    return {type: types.LOAD_PEOPLE_SUCCESS, people}\r\n}\r\n\r\nexport const loadPeople = (page) => {\r\n    return function(dispatch){\r\n        dispatch(beginApiCall());\r\n        return peopleApi.getPeople(page)\r\n        .then(people => {\r\n            dispatch(loadPeopleSucess(people));\r\n        })\r\n        .catch(error => {\r\n            dispatch(apiCallError(error));\r\n            throw error;\r\n        })\r\n    }\r\n}\r\n","import * as types from './actionTypes';\r\n\r\nexport const beginApiCall = () => { \r\n    return { type: types.BEGIN_API_CALL }\r\n}\r\n\r\nexport const apiCallError = (error) => {\r\n    return { type : types.API_CALL_ERROR, error }\r\n}\r\n","import { handleResponse , handleError } from './apiUtils';\r\nimport graphQLClient from '../graphql/client';\r\nimport * as PeopleRequests from '../graphql/people';\r\n\r\nexport const getPeople = (page) => {\r\n    const pages = page.toString()\r\n    return graphQLClient.query({\r\n        query: PeopleRequests.GET_PEOPLE,\r\n        variables: {\r\n            pageNumber: pages\r\n        }\r\n    })\r\n    .then(handleResponse)\r\n    .catch(handleError)\r\n}\r\n","import React from 'react';\r\nimport './Spinner.css';\r\n\r\nexport default function Spinner() {\r\n    return (\r\n        <div className=\"loader\">\r\n            Loading...\r\n        </div>\r\n    )\r\n}\r\n\r\n","import styled from \"styled-components\";\r\n\r\nconst Modal = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  opacity: 0;\r\n  transition: opacity linear 0.15s;\r\n  z-index: 2000;\r\n  width: ${props => {\r\n    switch (props.modalSize) {\r\n      case \"lg\":\r\n        return \"800\";\r\n      default:\r\n        return \"480\";\r\n    }\r\n  }}px;\r\n  margin: 40px auto;\r\n  &.fade-in {\r\n    opacity: 1;\r\n    transition: opacity linear 0.15s;\r\n  }\r\n  &.fade-out {\r\n    opacity: 0;\r\n    transition: opacity linear 0.15s;\r\n  }\r\n  .background {\r\n    background: rgba(0, 0, 0, 0.5);\r\n    position: fixed;\r\n    z-index: 1040;\r\n    display: block;\r\n    top: 0;\r\n    left: 0;\r\n    bottom: 0;\r\n    right: 0;\r\n    outline: 0;\r\n  }\r\n  .box-dialog {\r\n    z-index: 1050;\r\n    width: 100%;\r\n    background-color: #fefefe;\r\n    box-shadow: 0 3px 9px rgba(0, 0, 0, 0.5);\r\n    .box-content {\r\n      padding: 24px;\r\n      width: 100%;\r\n    }\r\n    .box-header {\r\n      height: 48px;\r\n      padding: 8px 24px;\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      border-bottom: 1px solid #c7c7c7;\r\n      .box-title {\r\n        font-size: 24px;\r\n        font-weight: 400;\r\n        margin: 0 0 0 0;\r\n      }\r\n      .x-close {\r\n        font-size: 35px;\r\n        line-height: 35px;\r\n        font-weight: 400;\r\n        text-shadow: none;\r\n        color: black;\r\n        cursor: pointer;\r\n        &:hover {\r\n          opacity: 0.5;\r\n        }\r\n      }\r\n    }\r\n    .box-body {\r\n      font-size: 14px;\r\n      padding: 0px;\r\n      width: auto;\r\n      height: auto;\r\n    }\r\n    .box-footer {\r\n      height: 48px;\r\n      padding: 0px 24px;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: flex-end;\r\n      border-top: 1px solid #c7c7c7;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Modal;\r\n","import React, { Component } from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n// styled\r\nimport StyledModal from \"./Modal.css\";\r\n\r\nconst modalRoot = document.getElementById(\"modal-root\");\r\n\r\nclass Modal extends Component {\r\n  static defaultProps = {\r\n    id: \"\",\r\n    modalClass: \"\",\r\n    modalSize: \"md\"\r\n  };\r\n\r\n  static propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n    isOpen: PropTypes.bool.isRequired,\r\n    modalClass: PropTypes.string,\r\n    modalSize: PropTypes.string\r\n  };\r\n\r\n  state = { fadeType: null };\r\n\r\n  background = React.createRef();\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.onEscKeyDown, false);\r\n    setTimeout(() => this.setState({ fadeType: \"in\" }), 0);\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (!this.props.isOpen && prevProps.isOpen) {\r\n      this.setState({ fadeType: \"out\" });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.onEscKeyDown, false);\r\n  }\r\n\r\n  transitionEnd = e => {\r\n    if (e.propertyName !== \"opacity\" || this.state.fadeType === \"in\") return;\r\n\r\n    if (this.state.fadeType === \"out\") {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  onEscKeyDown = e => {\r\n    if (e.key !== \"Escape\") return;\r\n    this.setState({ fadeType: \"out\" });\r\n  };\r\n\r\n  handleClick = e => {\r\n    e.preventDefault();\r\n    this.setState({ fadeType: \"out\" });\r\n  };\r\n\r\n  render() {\r\n    return ReactDom.createPortal(\r\n      <StyledModal\r\n        id={this.props.id}\r\n        className={`wrapper ${\"size-\" + this.props.modalSize} fade-${\r\n          this.state.fadeType\r\n        } ${this.props.modalClass}`}\r\n        role=\"dialog\"\r\n        modalSize={this.props.modalSize}\r\n        onTransitionEnd={this.transitionEnd}\r\n      >\r\n        <div className=\"box-dialog\">\r\n          <div className=\"box-header\">\r\n            <h4 className=\"box-title\">Character Details</h4>\r\n            <button onClick={this.handleClick} className=\"close\">\r\n              ×\r\n            </button>\r\n          </div>\r\n          <div className=\"box-content\">{this.props.children}</div>\r\n          <div className=\"box-footer\">\r\n            <button onClick={this.handleClick} className=\"close\">\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div\r\n          className={`background`}\r\n          onMouseDown={this.handleClick}\r\n          ref={this.background}\r\n        />\r\n      </StyledModal>,\r\n      modalRoot\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Modal from '../Modal'\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    width: 250px;\r\n    height: 100px;\r\n    background-color: #c4b2a9;\r\n    border-radius: 4px;\r\n    padding: 1rem;\r\n    margin: 1rem;\r\n\r\n    &:hover {\r\n        opacity: 0.5;\r\n        cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n    font-size: 2rem;\r\n    font-weight: 300;\r\n    margin: 1rem;\r\n    color: white;\r\n`;\r\n\r\nconst Description = styled.p`\r\n    color: white;\r\n`;\r\n\r\n\r\n\r\nconst Card = ({ person }) => {\r\n\r\n    const [modalOpen , setModalOpen] = useState(false);\r\n\r\n    const toggleState = (e) => {\r\n        setModalOpen(!modalOpen)\r\n    }\r\n\r\n\r\n    return (\r\n        <div onClick={toggleState}>\r\n        <Wrapper>\r\n            <Title>{person.name}</Title>\r\n        </Wrapper>\r\n        {modalOpen &&\r\n        <Modal\r\n            id=\"modal\"\r\n            isOpen={modalOpen}\r\n            onClose={toggleState}\r\n            >\r\n            <div className=\"box-body\">Name: {person.name}</div>\r\n            <div className=\"box-body\">Height: {person.height}</div>\r\n            <div className=\"box-body\">Mass: {person.mass}</div>\r\n            <div className=\"box-body\">Gender: {person.gender}</div>\r\n            Homeworld: <a href={person.homeworld}>{person.homeworld}</a>\r\n\r\n        </Modal>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Title = styled.h1`\r\n    font-size: 2rem;\r\n    font-weigth: 300;\r\n    margin: 1rem;\r\n    color: ${props => (props.main ? \"black\" : \"white\")};\r\n    text-align: center;\r\n`;\r\n\r\nexport default Title;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Card from './Card'\r\nimport Title from '../Title/Title'\r\n\r\n\r\n\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n`;\r\n\r\n\r\nexport const CardList = ({ data, actions }) => {\r\n\r\n    const navigateToFirst = () => {\r\n        actions.loadPeople(1)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Title main>\r\n                    <img src=\"./sovTech.png\" alt=\"\" width=\"44\" height=\"43\"  onClick={navigateToFirst}/> \r\n                Star Wars Characters\r\n            </Title>\r\n            <Wrapper>\r\n                {data.length !== undefined ? data.map(person => (\r\n                    <Card person={person} />\r\n                )): <></>} \r\n            </Wrapper>\r\n        </>\r\n    )\r\n}\r\n\r\n// export default CardList;\r\n","import React, { Component } from \"react\";\r\nimport { Pagination } from \"react-bootstrap\";\r\n\r\nclass PaginationBar extends Component {\r\n  render() {\r\n    const pages = []; \r\n    const  { clicked, count, updatePage } = this.props;\r\n    let clickedNumber = Number(clicked);\r\n    console.log(this.props, \"in the pagination\", clickedNumber)\r\n    \r\n    for (let i = 1; i < Math.round(count / 8); i++) {\r\n      pages.push(\r\n        <Pagination.Item key={i} onClick={updatePage} active={i=== clickedNumber}>\r\n          {i}\r\n        </Pagination.Item>\r\n      );\r\n    }\r\n\r\n    return <Pagination className=\"pagination\" >{pages}</Pagination>; \r\n  }\r\n}\r\n\r\nexport default PaginationBar;\r\n","import React, { useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as peolpeActions from '../../redux/actions/peopleActions';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport styled from 'styled-components';\r\nimport Spinner from '../common/Spinner';\r\nimport { CardList } from '../common/card/CardList';\r\nimport '.././styles.css'\r\n\r\nimport PaginationBar from \"../common/Pagination/PaginationBar.js\";\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n`;\r\n\r\nlet clicked = 1;\r\nconst PeoplePage = ({ actions, people, loading }) => {\r\n    \r\n    useEffect(() => { \r\n        if(people.length === undefined){\r\n            actions.loadPeople(1)\r\n        }\r\n    }, [])\r\n\r\n    const updatePage = async (e) => {\r\n        clicked = e.target.textContent\r\n        return await actions.loadPeople(e.target.textContent);\r\n      };\r\n\r\n    const renderCards = () => {\r\n        return !loading ? ( \r\n            <>\r\n                <CardList data={people} actions={actions}/>\r\n                <PaginationBar  activeLabel=\"(jjjjj)\" count={82} updatePage={updatePage} clicked={clicked} /> \r\n            </>\r\n        ):(\r\n            <Spinner/>\r\n        )\r\n    }\r\n    \r\n    return(\r\n        <>   \r\n            {renderCards()}\r\n        </>\r\n    )\r\n}\r\n\r\nPeoplePage.propTypes = {\r\n    people: PropTypes.array.isRequired,\r\n    loading: PropTypes.bool.isRequired\r\n}\r\n\r\nfunction mapStateToProps (state){\r\n    // console.log( \"+++++++++++++++++++++mapstateToprops\", state)\r\n    return {\r\n        people: state.people,\r\n        loading: state.apiCallsInProgress > 0\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch){\r\n    return {\r\n        actions: {\r\n            loadPeople: bindActionCreators(peolpeActions.loadPeople, dispatch)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PeoplePage);\r\n","import React from 'react';\r\n\r\nconst PageNotFound = () => <div>Oops!! Page not found.</div>\r\n\r\nexport default PageNotFound;\r\n","// import logo from './logo.svg';\n// import './App.css';\n\n\nimport React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport PeoplePage from './components/people/peoplePage';\nimport PageNotFound from './components/PageNotFound';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path='/' component={PeoplePage} />\n        <Route component={PageNotFound} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport configureStore from './redux/configureStore';\nimport { Provider as ReduxProvider } from 'react-redux';\n\nimport { ApolloProvider } from '@apollo/client';\nimport client from './graphql/client';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <ReduxProvider store={store}>\n   <ApolloProvider client={client} > \n          <Router>\n            <App />\n          </Router>     \n    </ApolloProvider>,\n  </ReduxProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import * as types from '../actions/actionTypes.js';\r\nconst initialState = {\r\n    people: []\r\n}\r\n\r\nconst peopleReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case types.LOAD_PEOPLE_SUCCESS:\r\n            return action.people;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default peopleReducer;\r\n","export default {\r\n    apiCallsInProgress: 0\r\n}\r\n","import * as types from '../actions/actionTypes';\r\nimport initialState from './initialState';\r\n\r\nconst actionTypeEndsInSuccess = (type) => {\r\n    return type.substring(type.length - 8) === '_SUCCESS';\r\n}\r\n\r\nconst apiCallStatusReducer = (\r\n    state = initialState.apiCallsInProgress,\r\n    action\r\n) => {\r\n    if(action.type === types.BEGIN_API_CALL){\r\n        return state + 1;\r\n    }else if(\r\n        action.type === types.API_CALL_ERROR || \r\n        actionTypeEndsInSuccess(action.type)\r\n    ){\r\n        return state - 1;\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default apiCallStatusReducer;\r\n","import { combineReducers } from 'redux';\r\nimport people from './peopleReducer';\r\nimport apiCallsInProgress from './apiStatusReducer'\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    people,\r\n    apiCallsInProgress\r\n});\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport rootReducer from './reducers';\r\nimport reduxImmutablrStateInvariant from 'redux-immutable-state-invariant';\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\nconst configureStore = (initialState) => {\r\n    const composeEnhancers = \r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose; \r\n    return createStore(\r\n        rootReducer,\r\n        initialState,\r\n        composeEnhancers(\r\n            applyMiddleware(thunk, reduxImmutablrStateInvariant())\r\n        )\r\n    )\r\n}\r\n\r\nexport default configureStore;\r\n","export const LOAD_PEOPLE_SUCCESS = \"LOAD_PEOPLE_SUCCESS\";\r\nexport const LOAD_PERSON_SUCCESS = \"LOAD_PERSON_SUCCESS\";\r\nexport const BEGIN_API_CALL = \"BEGIN_API_CALL\";\r\nexport const API_CALL_ERROR = \"API_CALL_ERROR\";\r\n","// if(process.env.NODE_ENV === 'production'){\r\n//     module.exports = require('./configureStore.prod');\r\n// }else{\r\n    module.exports = require('./configureStore.dev');\r\n// }\r\n"],"sourceRoot":""}